name: Build-aarch64_Linux-Generic-Noble
on:
  workflow_dispatch:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  release:
    types: [created]
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-24.04
    env:
      GH_TOKEN: ${{ secrets.GH_PAT }}
      OWNER: collaborativeroboticslab
    steps:
      - uses: actions/checkout@v4.1.1
      - run: sudo apt-get remove gcc g++

      - name: Install prerequisite packages (Bazel & zip)
        run: sudo apt install apt-transport-https curl gnupg gcc-13 g++-13 -y && curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor >bazel-archive-keyring.gpg && sudo mv bazel-archive-keyring.gpg /usr/share/keyrings && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list && sudo apt update && sudo apt-get -y install zip bazel-6.5.0

      - name: Clone the tensorflow library & checkout to latest tag
        run: git clone https://github.com/tensorflow/tensorflow && git fetch --tags && tag=$(git describe --tags `git rev-list --tags --max-count=1`) && cd tensorflow && git checkout $tag

      - name: Build the tensorflow lite library using Bazel
        working-directory: ./tensorflow
        run: bazel build --config=elinux_aarch64 //tensorflow/lite:libtensorflowlite.so --cxxopt=-DXNNPACK_ENABLE_ARM_BF16=OFF --cxxopt=-DXNNPACK_ENABLE_ARM_I8MM=OFF

      - name: Assemble package
        working-directory: ./tensorflow
        run: mkdir -p ../package/lib ../package/include/tensorflow/lite

      - name: Copy include files from flatbuffers into new package
        working-directory: ./tensorflow
        run: cp -r bazel-tensorflow/external/flatbuffers/include/* ../package/include

      - name: Copy include files from tensorflow lite into new package
        working-directory: ./tensorflow
        run: cp -r tensorflow/lite/* ../package/include/tensorflow/lite

      - name: Copy dynamic library file (.so) from bazel build dir to new package
        working-directory: ./tensorflow
        run: cp bazel-bin/tensorflow/lite/libtensorflowlite.so ../package/lib/

      - name: Copy template CMakeLists.txt to new package
        run: cp cmake/CMakeLists.txt package/

      - name: Remove other language bindings/examples/docs from the include directory
        run: rm -r package/include/tensorflow/lite/{testing,java,ios,objc,python,tools,swift,examples}

      - name: Strip the tensorflow lite include dir (so that it only contains header files)
        run: find package/include/tensorflow -type f ! -name "*.h" ! -name "*.hpp" -delete

      - name: Remove empty folders
        run: find package/include/tensorflow -type d -empty -delete

      - name: Zip it up
        run: cd package && zip -r ../tensorflow_linux_generic_aarch64_noble.zip * && cd ..

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          gh release upload $(gh release view --repo ${{ ENV.OWNER }}/TensorFlow_Lite_Compiled --json tagName --jq ".tagName") tensorflow_linux_generic_aarch64_noble.zip
