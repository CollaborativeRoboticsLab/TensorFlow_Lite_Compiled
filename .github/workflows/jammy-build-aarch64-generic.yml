name: Build-aarch64_Linux-Generic-Jammy

on:
  workflow_dispatch:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

permissions:
  contents: write

env:
  GH_TOKEN: ${{ secrets.GH_PAT }}
  OWNER: collaborativeroboticslab
  TENSORFLOW_TAG: v2.13.0

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4.1.1

      - run: sudo apt-get remove gcc g++

      - name: Install prerequisite packages (Bazel & zip)
        run: |
          sudo apt install apt-transport-https curl gnupg gcc-11 g++-11 -y 
          curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor >bazel-archive-keyring.gpg 
          sudo mv bazel-archive-keyring.gpg /usr/share/keyrings 
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list 
          sudo apt update 
          sudo apt-get -y install zip bazel-5.3.0

      - name: Install Python dependencies for build
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install numpy

      - name: Clone the TensorFlow repository
        run: git clone https://github.com/tensorflow/tensorflow

      - name: Checkout specified TensorFlow version
        id: tf_tag
        working-directory: tensorflow
        run: |
          git fetch --tags
          git checkout "$TENSORFLOW_TAG"
          echo "latest_tag=$TENSORFLOW_TAG" >> $GITHUB_OUTPUT

      - name: Build the TensorFlow Lite library using Bazel
        working-directory: ./tensorflow
        run: > 
          bazel build --config=elinux_aarch64 //tensorflow/lite:libtensorflowlite.so 
          --cxxopt=-DXNNPACK_ENABLE_ARM_BF16=OFF 
          --cxxopt=-DXNNPACK_ENABLE_ARM_I8MM=OFF

      - name: Assemble package
        working-directory: ./tensorflow
        run: mkdir -p ../package/lib ../package/include/tensorflow/lite

      - name: Copy include files from flatbuffers into new package
        working-directory: ./tensorflow
        run: cp -r bazel-tensorflow/external/flatbuffers/include/* ../package/include

      - name: Copy include files from TensorFlow Lite into new package
        working-directory: ./tensorflow
        run: cp -r tensorflow/lite/* ../package/include/tensorflow/lite

      - name: Copy dynamic library file (.so) from Bazel build dir to new package
        working-directory: ./tensorflow
        run: cp bazel-bin/tensorflow/lite/libtensorflowlite.so ../package/lib/

      - name: Copy template CMakeLists.txt to new package
        run: cp cmake/CMakeLists.txt package/

      - name: Remove other language bindings/examples/docs from the include directory
        run: rm -r package/include/tensorflow/lite/{testing,java,ios,objc,python,tools,swift,examples}

      - name: Strip the TensorFlow Lite include dir (only keep headers)
        run: find package/include/tensorflow -type f ! -name "*.h" ! -name "*.hpp" -delete

      - name: Remove empty folders
        run: find package/include/tensorflow -type d -empty -delete

      - name: Zip it up
        run: cd package && zip -r ../tensorflow_linux_generic_aarch64_jammy.zip * && cd ..

      - name: Create GitHub release if it doesn't exist
        run: |
          gh release view "$TENSORFLOW_TAG" --repo $OWNER/TensorFlow_Lite_Compiled || \
          gh release create "$TENSORFLOW_TAG" \
            --repo $OWNER/TensorFlow_Lite_Compiled \
            --title "$TENSORFLOW_TAG" \
            --notes "Auto-generated release for TensorFlow Lite $TENSORFLOW_TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove existing release asset (if exists)
        run: |
          gh release delete-asset "$TENSORFLOW_TAG" tensorflow_linux_generic_aarch64_jammy.zip --repo $OWNER/TensorFlow_Lite_Compiled || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "$TENSORFLOW_TAG" tensorflow_linux_generic_aarch64_jammy.zip --repo $OWNER/TensorFlow_Lite_Compiled
